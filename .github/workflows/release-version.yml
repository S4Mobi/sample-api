name: Update Project Version

on: create

jobs:
  get-release:
    name: Get the release branch version number

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

#      - uses: valadas/get-release-branch-version@v1
#        id: branchVersion
#
#      - name: Dump the Version
#        env:
#          MAJOR: ${{ steps.branchVersion.outputs.major }}
#          MINOR: ${{ steps.branchVersion.outputs.minor }}
#          PATCH: ${{ steps.branchVersion.outputs.patch }}
#        run: "echo major: $MAJOR minor $MINOR patch: $PATCH"

      - name: Get Branch Name
        id: branch-name
        uses: tj-actions/branch-names@v7

      - name: Get Version Name
        uses: bhowell2/github-substring-action@1.0.2
        id: version-name
        with:
          value: ${{ steps.branch-name.outputs.current_branch }}
          index_of_str: "release/"

      - name: Update Version in pom.xml
#        run: mvn -B versions:set -DnewVersion=${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }} -DgenerateBackupPoms=false
        run: mvn -B versions:set -DnewVersion=${{ steps.version-name.outputs.substring }} -DgenerateBackupPoms=false

      - name: Initialize Mandatory git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add pom.xml
          git commit --message "Update api Version"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: git push origin ${{ steps.branch-name.outputs.current_branch }}